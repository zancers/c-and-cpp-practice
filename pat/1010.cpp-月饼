#include <iostream>
#include <algorithm>
#include <iomanip>
using namespace std;

typedef struct mooncake{
        int stor;//storage
        int pric;//total price
        float avg;//average price
}moonk;

bool comp(const moonk &ma, const moonk &mb){
        return ma.avg>mb.avg;
}

int main(){
        int n,d;
        float p=0.000;
        cin>>n>>d;
        moonk moo[n];
        int i;
        for(i=0;i<n;i++){
                cin>>moo[i].stor;
        }
        for(i=0;i<n;i++){
                cin>>moo[i].pric;
                moo[i].avg=(moo[i].pric/1.000)/(moo[i].stor/1.000);
        //cout<<"moo["<<i<<"].stor:"<<moo[i].stor<<" moo["<<i<<"].pric:"<<moo[i].pric<<" moo["<<i<<"].avg:"<<moo[i].avg<<"\n";
        }
        sort(moo,moo+n,comp);
        i=0;
        while(d>0){
                if(d>=moo[i].stor){
                        p=p+moo[i].pric*1.000;
                        d=d-moo[i].stor;
                }
                else{
                        p=p+d*moo[i].avg;
                        d=0;
                }
                i++;
        }
        cout<<setiosflags(ios::fixed)<<setprecision(2)<<p;
        return 0;
}
