#include <iostream>
using namespace std;

int win[3], tie, lose[3];

int play(char ch1, char ch2){
        if(ch1 == ch2){
                tie ++;
        }
        else if(ch1 == 'C'){
                if(ch2 == 'J'){
                        win[0] ++;
                }
                else{
                        lose[0] ++;
                }
        }
        else if(ch1 == 'J'){
                if(ch2 == 'C'){
                        lose[1] ++;
                }
                else{
                        win[1] ++;
                }
        }
        else if(ch1 == 'B'){
                if(ch2 == 'C'){
                        win[2] ++;
                }
                else{
                        lose[2] ++;
                }
        }
        return 0;
}

char win_most(int i_w[]){
        char ch;
        if(i_w[0] >= i_w[1] && i_w[0] > i_w[2]){
                ch = 'C';
        }
        else if(i_w[1] > i_w[0] && i_w[1] > i_w[2]){
                ch = 'J';
        }
        else{
                ch = 'B';
        }
        return ch;
}

char lose_most(int i_l[]){
        char ch;
        if(i_l[0] >= i_l[1] && i_l[0] >= i_l[2]){
                ch = 'B';
        }
        else if(i_l[1] > i_l[0] && i_l[1] >= i_l[2]){
                ch = 'C';
        }
        else{
                ch = 'J';
        }
        return ch;
}

int main(){
        int n, t_win, t_tie, t_lose;
        char p1, p2;
        cin >> n;
        while(n > 0){
                cin >> p1 >> p2;
                play(p1, p2);
                n --;
        }
        t_win = win[0] + win[1] + win[2];
        t_tie = tie;
        t_lose = lose[0] + lose[1] + lose[2];
        cout << t_win << ' ' << tie << ' ' << t_lose << endl;
        cout << t_lose << ' ' << tie << ' ' << t_win << endl;
        cout << win_most(win) << ' ' << lose_most(lose) << endl;
        return 0;
}
