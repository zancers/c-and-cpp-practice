#include <stdio.h>

typedef struct student{
        int id;
        int de;
        int cai;
        int sum;
}stu;

void swap(stu lv[], int i, int j){
        stu tmp;
        tmp=lv[i];
        lv[i]=lv[j];
        lv[j]=tmp;
}

void sort(stu lv[], int c){
        int i,j;
        for(i=0;i<c-1;i++){
                for(j=0;j<c-i-1;j++){
                        if(lv[j].sum<lv[j+1].sum){
                                swap(lv,j,j+1);
                        }
                        else if(lv[j].sum==lv[j+1].sum && lv[j].de<lv[j+1].de){
                                swap(lv,j,j+1);
                        }
                        else if(lv[j].sum==lv[j+1].sum && lv[j].de==lv[j+1].de && lv[j].id>lv[j+1].id){
                                swap(lv,j,j+1);
                        }
                }
        }
        for(i=0;i<c;i++){
                printf("%d %d %d\n",lv[i].id,lv[i].de,lv[i].cai);
        }
}

int main(){
        int n,l,h;
        scanf("%d %d %d",&n,&l,&h);
        stu lv1[n],lv2[n],lv3[n],lv4[n];
        int c1,c2,c3,c4;c1=c2=c3=c4=0;
        int i,count=0;
        for(i=0;i<n;i++){
                int id,de,cai,sum;
                scanf("%d %d %d",&id,&de,&cai);
                sum=de+cai;
                stu stutmp;
                stutmp.id=id;stutmp.de=de;stutmp.cai=cai;stutmp.sum=sum;
                if(de>=l && cai>=l){
                        if(de>=h && cai>=h){
                                lv1[c1++] = stutmp;
                        }
                        else if(de>=h && cai<h){
                                lv2[c2++] = stutmp;
                        }
                        else if(de<h && cai<h && de>=cai){
                                lv3[c3++] = stutmp;
                        }
                        else{
                                lv4[c4++] = stutmp;
                        }
                                count++;
                }
        }
        printf("%d\n",count);
        sort(lv1,c1);
        sort(lv2,c2);
        sort(lv3,c3);
        sort(lv4,c4);
        return 0;
}
